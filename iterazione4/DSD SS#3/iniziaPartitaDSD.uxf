<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>2160</x>
      <y>0</y>
      <w>100</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>training:
Training</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2200</x>
      <y>40</y>
      <w>30</w>
      <h>720</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;700.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>2200</x>
      <y>70</y>
      <w>20</w>
      <h>210</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1090</x>
      <y>80</y>
      <w>100</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>theMatch:
Match</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1130</x>
      <y>120</y>
      <w>30</w>
      <h>720</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;700.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1130</x>
      <y>150</y>
      <w>20</w>
      <h>460</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>930</x>
      <y>150</y>
      <w>220</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
startMatch(nickname)</panel_attributes>
    <additional_attributes>200.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>920</x>
      <y>190</y>
      <w>800</w>
      <h>830</h>
    </coordinates>
    <panel_attributes>for each
robot owned by
player in robots list
layer=-2
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1460</x>
      <y>320</y>
      <w>100</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>robot:
Robot</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1500</x>
      <y>360</y>
      <w>30</w>
      <h>720</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;700.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1500</x>
      <y>420</y>
      <w>20</w>
      <h>70</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>600</x>
      <y>240</y>
      <w>250</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>i robot dei giocatori sono già
stati creati dal metodo
creaPartita(...) quando si crea
un robot lo si crea con nome
owner e pos iniziale

in questo dsd bisogna assegnare ad ogni robot dei un giocatore degli upgrade SE match ha initUpgrade = true


style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1300</x>
      <y>230</y>
      <w>160</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>upgradeManager:
UpgradeManager</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1370</x>
      <y>270</y>
      <w>30</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1140</x>
      <y>290</y>
      <w>250</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
getRandomUpgrade()</panel_attributes>
    <additional_attributes>230.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1370</x>
      <y>300</y>
      <w>20</w>
      <h>90</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1140</x>
      <y>340</y>
      <w>250</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;
randomUpgrade</panel_attributes>
    <additional_attributes>230.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>590</x>
      <y>490</y>
      <w>260</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>nuova classe update manager che gestisce le istanze di updates?
single istance, crea tutti quelli disponibili e si richede a lui quando bisogna dare un upgrade ad un robot.
dato che gli update globali sono definiti da un file questa classe quando è creata legge il file a inizio match e gestisce gli upgrade per quel match
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>640</x>
      <y>700</y>
      <w>250</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>quando si assegnano gli upgrade iniziali ai robot, il match chiede all'upgrade manager di dargli una istanza di upgrade da assegnarli scelta random tra quelle disponibili
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1140</x>
      <y>430</y>
      <w>380</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
addUpgrade(randomUpgrade)</panel_attributes>
    <additional_attributes>360.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>240</x>
      <y>560</y>
      <w>300</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>necessaria anche classe MancheManager che gestisce ogni manche di gioco, essa è single instance (una sola manche alla volta).

il Match è colui che fa iniziare la manche una volta che tutti i giocatori hanno finito di scrivere il programma per ogni robot, esso chiama un metodo di MancheManager "startNextManche()"
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>250</x>
      <y>820</y>
      <w>290</w>
      <h>430</h>
    </coordinates>
    <panel_attributes>Manche manager crea delle classi di tipo sottofase, ognuna estende una classe "subphase" generica, aggiungendo metodi e variabili necessari in base alla sottofase da gestire

le sottofasi così create comunicano cambiamenti di posizione e fanno muovere i robot sul robodromo, che a sua volta comunica al Match le stat aggiornate dei robot così che possano essere aggiornate (es punti vista persi, upgrade ricevuti, punti di salvataggio ecc).

ogni subphase genera la subphase seguente, MancheManager inizia solo il processo, l'ultima subPhase restituisce il controllo a Manche che esegue un metodo "endManche()" che a sua volta resutische il controllo a Manche per continuare il processo.

PATTERN GOF DECORATOR
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>570</x>
      <y>990</y>
      <w>240</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>NOTA: in ogni Manche vengono eseguite le 5 sottofasi per 5 volte (una per ogni registro disponibile)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
